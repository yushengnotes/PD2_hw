05/27/23 22:58

calculateIDF.cpp:13:39: error: use of undeclared identifier 'vector'
int searchOccurNum(int &num, map<int, vector<int> > &numCorpus);
                                      ^
calculateIDF.cpp:15:28: error: use of undeclared identifier 'vector'
void calculateIDF(map<int, vector<int> > &numQuery, map<int, vector<int> > &numCorpus, map <int, vector< unordered_map<int,int> > > &storeIDF) {
                           ^
calculateIDF.cpp:15:62: error: use of undeclared identifier 'vector'
void calculateIDF(map<int, vector<int> > &numQuery, map<int, vector<int> > &numCorpus, map <int, vector< unordered_map<int,int> > > &storeIDF) {
                                                             ^
calculateIDF.cpp:15:106: error: use of undeclared identifier 'unordered_map'
void calculateIDF(map<int, vector<int> > &numQuery, map<int, vector<int> > &numCorpus, map <int, vector< unordered_map<int,int> > > &storeIDF) {
                                                                                                         ^
calculateIDF.cpp:22:17: error: use of undeclared identifier 'unordered_map'
        vector< unordered_map<int,int> > perQueryIDF;
                ^
calculateIDF.cpp:23:9: error: no template named 'unordered_map'; did you mean 'std::unordered_map'?
        unordered_map<int,int> queryIDF;
        ^~~~~~~~~~~~~
        std::unordered_map
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/unordered_map:1028:28: note: 'std::unordered_map' declared here
class _LIBCPP_TEMPLATE_VIS unordered_map
                           ^
6 errors generated.
make: *** [calculateIDF.o] Error 1

Add using namespace std; the problem was solved.

-----------------------------------------------------------------------

05/27/23 23:14

searchOccurNum.cpp:11:44: error: use of undeclared identifier 'vector'
int searchOccurNum(int num, const map<int, vector<int> > &numCorpus) {
                                           ^
searchOccurNum.cpp:14:18: error: use of undeclared identifier 'flags'; did you mean 'flag'?
    vector<bool> flags;
                 ^~~~~
                 flag
searchOccurNum.cpp:13:10: note: 'flag' declared here
    bool flag = false;
         ^
searchOccurNum.cpp:14:17: error: expected ';' after expression
    vector<bool> flags;
                ^
                ;
searchOccurNum.cpp:14:5: error: use of undeclared identifier 'vector'
    vector<bool> flags;
    ^
searchOccurNum.cpp:22:9: error: use of undeclared identifier 'flags'; did you mean 'flag'?
        flags.push_back(flag);
        ^~~~~
        flag
searchOccurNum.cpp:13:10: note: 'flag' declared here
    bool flag = false;
         ^
searchOccurNum.cpp:22:14: error: member reference base type 'bool' is not a structure or union
        flags.push_back(flag);
        ~~~~~^~~~~~~~~~
searchOccurNum.cpp:26:29: error: use of undeclared identifier 'flags'; did you mean 'flag'?
    for (const auto& flag : flags) {
                            ^~~~~
                            flag
searchOccurNum.cpp:26:22: note: 'flag' declared here
    for (const auto& flag : flags) {
                     ^
searchOccurNum.cpp:26:27: error: invalid range expression of type 'const auto'; no viable 'begin' function available
    for (const auto& flag : flags) {
                          ^ ~~~~~
searchOccurNum.cpp:28:13: error: use of undeclared identifier 'occurNum'
            occurNum++;
            ^
searchOccurNum.cpp:32:12: error: use of undeclared identifier 'occurNum'
    return occurNum;
           ^
searchOccurNum.cpp:14:18: warning: expression result unused [-Wunused-value]
    vector<bool> flags;
                 ^~~~~
1 warning and 10 errors generated.
make: *** [searchOccurNum.o] Error 1

Add "using namespace std;" "use of undeclared identifier" was solved.
Add "int occurNum = 0;" problem was solved.

-----------------------------------------------------------------------
05/28/23 17:28

calculateSumIDF.cpp:22:9: error: no matching function for call to 'search'
        search(pair.second, numCorpus, IDF);
        ^~~~~~
calculateSumIDF.cpp:13:6: note: candidate function not viable: 1st argument ('const std::vector<std::pair<int, double>>') would lose const qualifier
void search(vector< pair<int, double> > &nums, const map<int, vector<int> > &numCorpus, map<int, vector<double> > &IDF);
     ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/search.h:185:19: note: candidate function template not viable: requires 4 arguments, but 3 were provided
_ForwardIterator1 search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
                  ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__algorithm/search.h:174:19: note: candidate function template not viable: requires 5 arguments, but 3 were provided
_ForwardIterator1 search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
                  ^
1 error generated.
make: *** [calculateSumIDF.o] Error 1

---------------------------------------------------

05/28/23 21:51

sortSumIDF.cpp:16:17: error: 'pair' does not name a template but is followed by template arguments; did you mean '::pair'?
        vector< pair<int, double> > vec(pair.second.begin(), pair.second.end());
                ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__utility/pair.h:40:29: note: '::pair' declared here
struct _LIBCPP_TEMPLATE_VIS pair
                            ^
sortSumIDF.cpp:14:22: note: non-template declaration found by name lookup
    for (const auto& pair : storeSumIDF) {
                     ^
sortSumIDF.cpp:19:47: error: no template named 'pair'; did you mean '::pair'?
        sort(vec.begin(), vec.end(), [](const pair<int, double>& a, const pair<int, double>& b) {
                                              ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__utility/pair.h:40:29: note: '::pair' declared here
struct _LIBCPP_TEMPLATE_VIS pair
                            ^
sortSumIDF.cpp:19:75: error: no template named 'pair'; did you mean '::pair'?
        sort(vec.begin(), vec.end(), [](const pair<int, double>& a, const pair<int, double>& b) {
                                                                          ^
/Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/c++/v1/__utility/pair.h:40:29: note: '::pair' declared here
struct _LIBCPP_TEMPLATE_VIS pair
                            ^
3 errors generated.
make: *** [sortSumIDF.o] Error 1
